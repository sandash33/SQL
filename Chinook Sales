#In this SQL, we were given a database with a set of questions to look into. We also were tasked in creating our own questions for the data and finding those answers. Questions that I have created are denoted with a **.

Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT DISTINCT customerid, firstname, lastname, country
FROM chinook.customers
WHERE country != 'USA'
ORDER BY customerid;

Show only the Customers from Brazil.
SELECT DISTINCT customerid, lastname, firstname, country
FROM chinook.customers
WHERE country = 'Brazil'
ORDER BY customerid;

Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.'
SELECT lastname, firstname, invoiceid, invoicedate, billingcountry
FROM chinook.customers c
JOIN chinook.invoices i
ON c.customerid = i.customerid
WHERE country = 'Brazil'
ORDER BY invoiceid;

Show the Employees who are Sales Agents.
SELECT lastname, firstname, title
FROM chinook.employees
WHERE title LIKE '%sales%'
ORDER BY lastname;

Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT billingcountry
FROM chinook.invoices
ORDER BY billingcountry;

Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.'
SELECT i.invoiceid, e.lastname, e.firstname
FROM invoices i
JOIN customers c
ON i.customerid = c.customerid
JOIN employees e
ON c.supportrepid = e.employeeid
ORDER BY invoiceid;

Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.invoiceid, i.total, c.lastname AS customerlastname, c.firstname AS customerfirstname, e.lastname AS employeelastname, e.firstname AS employeefirstname
FROM invoices i
JOIN customers c
ON i.customerid = c.customerid
JOIN employees e
ON c.supportrepid = e.employeeid
ORDER BY invoiceid;

How many Invoices were there in 2009?
SELECT COUNT(invoiceid)
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';

What are the total sales for 2009?
SELECT SUM(total)
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';

Write a query that includes the purchased track name with each invoice line item.
SELECT invoicelineid, name
FROM chinook.invoice_items ii
JOIN chinook.tracks t
ON ii.trackid = t.trackid
ORDER BY invoicelineid;

Write a query that includes the purchased track name AND artist name with each invoice line item.
SELECT invoicelineid, t.name AS trackname, ar.name AS artistname
FROM chinook.invoice_items ii
JOIN chinook.tracks t
ON ii.trackid = t.trackid
JOIN chinook.albums al
ON t.albumid = al.albumid
JOIN chinook.artists ar
ON al.artistid = ar.artistid
ORDER BY invoicelineid;

Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name AS trackname, al.title AS albumtitle, mt.name AS mediatypename, g.name AS genrename
FROM tracks t
JOIN albums al
ON t.albumid = al.albumid
JOIN media_types mt
ON t.mediatypeid = mt.mediatypeid
JOIN genres g
ON t.genreid = g.genreid
ORDER BY trackid;

Show the total sales made by each sales agent.
SELECT e.employeeid, e.lastname, e.firstname, SUM(i.total) AS totalsales
FROM invoices i 
JOIN customers c
ON i.customerid = c.customerid
JOIN employees e
ON c.supportrepid = e.employeeid
GROUP BY employeeid
ORDER BY employeeid;

Which sales agent made the most in sales in 2009?
SELECT e.employeeid, e.lastname, e.firstname, SUM(i.total) AS totalsales
FROM invoices i 
JOIN customers c
ON i.customerid = c.customerid
JOIN employees e
ON c.supportrepid = e.employeeid
WHERE i.invoicedate LIKE '2009%'
GROUP BY employeeid
ORDER BY totalsales DESC
LIMIT 1;

**Show who reports to who from the employee grid along with their positions.
SELECT employee.firstname AS employeefirstame, employee.lastname AS employeelastname, employee.title, boss.firstname AS bossfirstname, boss.lastname AS bosslastname
FROM employees employee
LEFT JOIN employees boss
ON employee.reportsto = boss.employeeid;

**Show how much revenue was made by country.
SELECT c.country, SUM(i.total)
FROM customers c
JOIN invoices i
ON c.customerid = i.customerid
GROUP BY country;

**Show all albums and thier profits.
SELECT a.title, ROUND(SUM(i.total)) AS totalsales
FROM invoices i
JOIN invoice_items ii
ON i.invoiceid = ii.invoiceid
JOIN tracks t
ON ii.trackid = t.trackid
JOIN albums a
ON t.albumid = a.albumid
GROUP BY a.title;
